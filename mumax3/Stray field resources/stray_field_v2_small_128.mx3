// Broad objective: Simulate the interplay of chiral magnetism and superconductivity
// Local objective: Obtain M-H loops of stack at 850K and 0K and to find out the demag field
// Terminology:
// Stack: The full stack structure, or a functional part of a full stack. E.g. a bias stack
// Repeat: Repetition of a certain stack structure. E.g. [Ir/Fe/Co/Pt]5 is a stack with 5 repeats
// Layer: A single cell in z. Same usage as in mumax.
// Stack structure
num_sk_repeats :=2  //number of physical repeats for skyrmion layer 
num_sk_layers_per_repeat := 1 
num_x_cells := 128
num_sk_layers := num_sk_repeats*num_sk_layers_per_repeat
num_total_layers := num_sk_layers*5

// Regions
Region_sk_0 := 2
Region_sk_1 := 3

// constants
mu_0:=4*pi*1e-7

// Sk Stack
Aex_raw_sk := 12.0e-12                              // Exchange in J/m
Msat_raw_sk := 1.0e6                               //Saturation magnetisation in A/m
Keff_raw_sk := 0                                // PMA in J/m^3
Ku1_raw_sk:=Keff_raw_sk+(mu_0/2)*Msat_raw_sk*Msat_raw_sk // Uniaxial Anisotropy in J/m^3
Dbulk_raw_sk := 0                                   //Bulk DMI in J/m^2
Dind_raw_sk := 1.8e-3         //0.4e-3                     //Interfacial DMI in J/m^2
alpha_sk:=0.05
tFM_sk:=1.0e-9  //Fe&Co thickness
tHM_sk:=2.0e-9  //both Ir and Pt thickness add tgt
eff_med_scaling_sk:=tFM_sk/(tFM_sk+tHM_sk)  // factor for effective medium approx for skyrmion layer

// Regions of scaled material parameters for CoB (FM) -> skyrmion layer
Aex_scaled_sk := Aex_raw_sk*eff_med_scaling_sk                         //4.0e-12
Msat_scaled_sk := Msat_raw_sk*eff_med_scaling_sk                          //3.33e5
Keff_scaled_sk := Keff_raw_sk*eff_med_scaling_sk                         //0e4
Ku1_scaled_sk := Keff_scaled_sk+(mu_0/2)*Msat_scaled_sk*Msat_scaled_sk //2.0944e5
Dbulk_scaled_sk := Dbulk_raw_sk*eff_med_scaling_sk                      //0
Dind_scaled_sk := Dind_raw_sk*eff_med_scaling_sk                        //0.6
print(sprintf("==> Msat_scaled_sk: %f, Keff_scaled_sk: %f, Ku1_scaled_sk: %f",Msat_scaled_sk,Keff_scaled_sk,Ku1_scaled_sk))
Msat.SetRegion(0, 0) 

// Region 2 - Skyrmion Stack
Aex.SetRegion(Region_sk_0, Aex_scaled_sk)                       // Exchange in J/m^3
Msat.SetRegion(Region_sk_0, Msat_scaled_sk)                         //Saturation magnetisation in A/m
Ku1.SetRegion(Region_sk_0, Ku1_scaled_sk)                       // Anisotropy in J/m^3
AnisU.SetRegion(Region_sk_0, vector(0, 0, 1))               //Uniaxial anisotropy direction 
Dbulk.SetRegion(Region_sk_0, Dbulk_scaled_sk)
Dind.SetRegion(Region_sk_0, Dind_scaled_sk)                         //Interfacial DMI in J/m^2
alpha.SetRegion(Region_sk_0, alpha_sk)                  // Damping

// Region 3 - Skyrmion Stack
Aex.SetRegion(Region_sk_1, Aex_scaled_sk)                       // Exchange in J/m^3
Msat.SetRegion(Region_sk_1, Msat_scaled_sk)                         //Saturation magnetisation in A/m
Ku1.SetRegion(Region_sk_1, Ku1_scaled_sk)                       // Anisotropy in J/m^3
AnisU.SetRegion(Region_sk_1, vector(0, 0, 1))               //Uniaxial anisotropy direction 
Dbulk.SetRegion(Region_sk_1, Dbulk_scaled_sk)
Dind.SetRegion(Region_sk_1, Dind_scaled_sk)                         //Interfacial DMI in J/m^2
alpha.SetRegion(Region_sk_1, alpha_sk)                  // Damping

// Simulation mesh
SetPBC(2,2,0)
SetGridsize(num_x_cells,num_x_cells,num_total_layers)
cellsizex:=4.0e-9
cellsizey:=4.0e-9
cellsizez:=3.0e-9
SetCellsize(cellsizex, cellsizey, cellsizez)
tmp_region_num := 0
tmp_layer_num := 0

// Map layer -> Region: Sk stack
print("==> Sk stack:")
for i:=0;i<num_sk_repeats;i+=1{ //Essentially sets each region to have all the sk_repeats. In this case region(2,layer(0)), region(3,layer(1))
    for j:=0;j<num_sk_layers_per_repeat;j+=1{
        tmp_region_num = Mod(i,2)+Region_sk_0
        tmp_layer_num = j+i*num_sk_layers_per_repeat
        defRegion(tmp_region_num,layer(tmp_layer_num))
        print(sprintf("==>  Layer: %d, Region: %d",tmp_layer_num, tmp_region_num))
    }
}

// set interlayer exchange coupling
//Sk (IEC-B)
mu0HRKKY_Sk:= 0.1 // in T
J_val_Sk := mu0HRKKY_Sk*tFM_sk*Msat_raw_sk
scaleExchange_sk := J_val_Sk*cellsizez/(2*Aex_scaled_sk)

// scale Exchange between sk-sk
ext_scaleExchange(Region_sk_0, Region_sk_1, scaleExchange_sk)   //between sk repeats

// choose max error and solver
MaxErr = 1e-4
SetSolver(6) 

// quantities to save
OutputFormat = OVF1_TEXT
// custom quantities to save to table
TableAdd(B_demag.region(0))
TableAdd(m_full.region(0))

// set initial magnetisation
m = Uniform(0, 0, 1)
// define some variables here. Note some of these are floats
B_current := 0.0
B_current_mT := 0.0
t0 := 0.0
ind := 0
ind_start := 0
filename := ""

// B field
B_0 := 0.075
// set external field and temp
Temp = 850
B_ext=vector(0,0,B_0)


// print values to check
prt_str := sprintf("==> Current field: %f",B_0)
print(prt_str)



RunWhile(MaxTorque>1e-2)

// output mag	
B_current_mT = B_0*1e3
filename = sprintf("m_%.0fmT", B_current_mT)
saveas(m, filename)
saveas(B_demag, sprintf("B_demag_%.0fmT", B_current_mT))
